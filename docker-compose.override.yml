version: '3.7'

services:
  server:
    build:
      context: ./server
      target: development-build-stage
      dockerfile: Dockerfile
    container_name: cbn-server
    # ports:
    #   - '3000:3000'
    volumes:
      - ./:/app
      - /app/node_modules
    restart: 'unless-stopped'
    networks:
      - backend
    links:
      - cbn-pg
    depends_on:
      - cbn-pg
    environment:
      - DB_HOST=host.docker.internal
      - DB_PORT=5432
      - DB_USER=cbn
      - DB_PASSWORD=cbn123
      - DB_DATABASE=marketcon
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=backend'
      - 'traefik.http.routers.server-secure.entrypoints=web'
      - 'traefik.http.routers.server-secure.rule=Host(`api.localhost`)'
      - 'traefik.http.services.server.loadbalancer.server.port=6000'

  cbn-pg:
    container_name: cbn-pg
    image: postgres:14.4-alpine
    restart: 'unless-stopped'
    networks:
      - backend
    environment:
      - POSTGRES_USER=cbn
      - POSTGRES_PASSWORD=cbn
      - POSTGRES_DB=cbn
      - POSTGRES_PORT=5432
      - POSTGRES_HOST=postgres
      - POSTGRES_SSL=false

  pgadmin:
    container_name: cbn-pg
    image: dpage/pgadmin4:6.12
    restart: 'unless-stopped'
    networks:
      - backend
    environment:
      - PGADMIN_DEFAULT_EMAIL=dozie@gmail.com
      - PGADMIN_DEFAULT_PASSWORD=cbn123
      - PGADMIN_LISTEN_PORT=8080
    links:
      - cbn-pg
    depends_on:
      - cbn-pg
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=backend'
      - 'traefik.http.routers.pgAdmin-secure.entrypoints=web'
      - 'traefik.http.routers.pgAdmin-secure.rule=Host(`db.localhost`)'
      - 'traefik.http.services.pgAdmin.loadbalancer.pgAdmin.port=8080'

  client:
    container_name: cbn-client
    restart: unless-stopped
    tty: true
    build: ./client
    # ports:
    #   - '3000:3000'
    depends_on:
      - server
    networks:
      # - proxy
      - backend
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=backend'
      - 'traefik.http.routers.client-secure.entrypoints=web'
      - 'traefik.http.routers.client-secure.rule=Host(localhost`)'
      - 'traefik.http.services.client.loadbalancer.client.port=3000'
  cbn-proxy:
    image: traefik:latest
    container_name: cbn-proxy
    restart: unless-stopped
    security_opt:
      - no-new-privileges:true
    networks:
      # - proxy
      - backend
    ports:
      - 80:80
      - 443:443
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik-data/traefik.yml:/traefik.yml
      - ./traefik-data/acme.json:/acme.json
      - ./traefik-data/configurations:/configurations
    labels:
      - 'traefik.enable=true'
      - 'traefik.docker.network=backend'
      - 'traefik.http.routers.cbn-proxy-secure.entrypoints=websecure'
      - 'traefik.http.routers.cbn-proxy-secure.rule=Host(`proxy.localhost`)'
      - 'traefik.http.routers.cbn-proxy-secure.middlewares=user-auth@file'
      - 'traefik.http.routers.cbn-proxy-secure.service=api@internal'
  # portainer:
  #   image: portainer/portainer-ce:latest
  #   container_name: portainer
  #   restart: unless-stopped
  #   security_opt:
  #     - no-new-privileges:true
  #   networks:
  #     # - proxy
  #     - backend
  #   volumes:
  #     - /etc/localtime:/etc/localtime:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #     - ./portainer-data:/data
  #   labels:
  #     - 'traefik.enable=true'
  #     - 'traefik.docker.network=backend'
  #     - 'traefik.http.routers.portainer-secure.entrypoints=web'
  #     - 'traefik.http.routers.portainer-secure.rule=Host(`portainer.localhost`)'
  #     - 'traefik.http.routers.portainer-secure.service=portainer'
  #     - 'traefik.http.services.portainer.loadbalancer.server.port=9000'

networks:
  backend:
    driver: bridge

volumes:
  data:
    driver: local
